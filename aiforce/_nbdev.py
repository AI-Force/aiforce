# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"logger": "tools-image_size_calculator.ipynb",
         "SubsetType": "annotation-core.ipynb",
         "RegionShape": "annotation-core.ipynb",
         "parse_region_shape": "annotation-core.ipynb",
         "Region": "annotation-core.ipynb",
         "Annotation": "annotation-core.ipynb",
         "convert_region": "annotation-core.ipynb",
         "region_bounding_box": "annotation-core.ipynb",
         "AnnotationAdapter": "annotation-core.ipynb",
         "DEFAULT_CATEGORY_FOLDER_INDEX": "annotation-folder_category_adapter.ipynb",
         "FolderCategoryAnnotationAdapter": "annotation-folder_category_adapter.ipynb",
         "DEFAULT_ANNOTATIONS_FILE": "annotation-via_adapter.ipynb",
         "CSV_FIELDNAMES": "annotation-via_adapter.ipynb",
         "MultiCategoryAnnotationAdapter": "annotation-multi_category_adapter.ipynb",
         "DEFAULT_CATEGORY_LABEL_KEY": "annotation-via_adapter.ipynb",
         "VIAAnnotationAdapter": "annotation-via_adapter.ipynb",
         "FIELD_NAMES": "annotation-yolo_adapter.ipynb",
         "DEFAULT_IMAGES_FOLDER": "annotation-yolo_adapter.ipynb",
         "DEFAULT_IMAGE_ANNOTATIONS_FOLDER": "annotation-yolo_adapter.ipynb",
         "YOLOAnnotationAdapter": "annotation-yolo_adapter.ipynb",
         "convert": "annotation_converter.ipynb",
         "configure_logging": "tools-image_size_calculator.ipynb",
         "WINDOW_NAME": "annotation_viewer.ipynb",
         "show_annotated_images": "annotation_viewer.ipynb",
         "DEFAULT_CATEGORIES_FILE": "category_tools.ipynb",
         "NOT_CATEGORIZED": "category_tools.ipynb",
         "BACKGROUND_CLASS": "category_tools.ipynb",
         "BACKGROUND_CLASS_CODE": "category_tools.ipynb",
         "read_categories": "category_tools.ipynb",
         "write_categories": "category_tools.ipynb",
         "DEFAULT_HELP_ARGUMENTS": "core.ipynb",
         "import_modules": "core.ipynb",
         "list_subclasses": "core.ipynb",
         "all_subclasses": "core.ipynb",
         "parse_known_help": "core.ipynb",
         "parse_known_args_with_help": "core.ipynb",
         "assign_arg_prefix": "core.ipynb",
         "input_feedback": "core.ipynb",
         "Dataset": "dataset-core.ipynb",
         "ImageClassificationDataset": "dataset-image_classification.ipynb",
         "ImageObjectDetectionDataset": "dataset-image_object_detection.ipynb",
         "ImageSegmentationDataset": "dataset-image_segmentation.ipynb",
         "DatasetType": "dataset-type.ipynb",
         "infer_dataset_type": "dataset-type.ipynb",
         "DATASET_FOLDER": "dataset_generator.ipynb",
         "generate": "dataset_generator.ipynb",
         "box_area": "evaluation-core.ipynb",
         "intersection_box": "evaluation-core.ipynb",
         "union_box": "evaluation-core.ipynb",
         "intersection_over_union": "evaluation-core.ipynb",
         "create_ellipse": "geometry.ipynb",
         "ellipse_intersection_area": "geometry.ipynb",
         "pascal_voc_palette": "image-color_palette.ipynb",
         "ade20k_palette": "image-color_palette.ipynb",
         "cityscapes_palette": "image-color_palette.ipynb",
         "mhp_palette_v1": "image-color_palette.ipynb",
         "setup_learner": "image-inference.ipynb",
         "fix_odd_sides": "image-inference.ipynb",
         "Inference": "image-inference.ipynb",
         "ClassificationInference": "image-inference.ipynb",
         "SegmentationInference": "image-inference.ipynb",
         "limit_to_max_size": "image-pillow_tools.ipynb",
         "fit_to_max_size": "image-pillow_tools.ipynb",
         "get_image_size": "image-pillow_tools.ipynb",
         "EXIF_ORIENTATION_TAG": "image-pillow_tools.ipynb",
         "get_image_orientation": "image-pillow_tools.ipynb",
         "read_exif_metadata": "image-pillow_tools.ipynb",
         "write_exif_metadata": "image-pillow_tools.ipynb",
         "assign_exif_orientation": "image-pillow_tools.ipynb",
         "convert_to_base64": "image-pillow_tools.ipynb",
         "write_mask": "image-pillow_tools.ipynb",
         "ImageOrientation": "image-tools.ipynb",
         "get_image_scale": "image-tools.ipynb",
         "BUF_SIZE": "tools-check_double_images.ipynb",
         "DEFAULT_IMAGE_EXTENSIONS": "io-core.ipynb",
         "FOLDER_FILTER": "io-core.ipynb",
         "scan_files": "io-core.ipynb",
         "scan_path": "io-core.ipynb",
         "delete_folder": "io-core.ipynb",
         "create_folder": "io-core.ipynb",
         "get_file_sha": "tools-check_double_images.ipynb",
         "assign_filename_suffix": "io-core.ipynb",
         "strip_path": "io-core.ipynb",
         "TFLITE_MODEL_DEFAULT_NAME": "tensorflow-tflite_converter.ipynb",
         "convert_model": "tensorflow-tflite_converter.ipynb",
         "save_model": "tensorflow-tflite_converter.ipynb",
         "read_pipeline_config": "tensorflow-tflite_converter.ipynb",
         "SAVED_MODEL_META_DEFAULT_KEY": "tensorflow-tflite_metadata.ipynb",
         "AUTHOR": "tensorflow-tflite_metadata.ipynb",
         "MetaInfo": "tensorflow-tflite_metadata.ipynb",
         "create_metadata": "tensorflow-tflite_metadata.ipynb",
         "write_metadata": "tensorflow-tflite_metadata.ipynb",
         "read_metadata": "tensorflow-tflite_metadata.ipynb",
         "create_tfrecord_entry": "tensorflow-tfrecord_builder.ipynb",
         "create_tfrecord_file": "tensorflow-tfrecord_builder.ipynb",
         "int64_feature": "tensorflow-tfrecord_builder.ipynb",
         "int64_list_feature": "tensorflow-tfrecord_builder.ipynb",
         "bytes_feature": "tensorflow-tfrecord_builder.ipynb",
         "bytes_list_feature": "tensorflow-tfrecord_builder.ipynb",
         "float_list_feature": "tensorflow-tfrecord_builder.ipynb",
         "create_labelmap_file": "tensorflow-tfrecord_builder.ipynb",
         "FILE_FILTER": "tools-check_double_images.ipynb",
         "IMAGE_EXTENSION": "tools-check_double_images.ipynb",
         "DoubleFileChecker": "tools-check_double_images.ipynb",
         "check_double_entries": "tools-check_double_images.ipynb",
         "remove_entries": "tools-check_double_images.ipynb",
         "scan_folder": "tools-check_double_images.ipynb",
         "Downloader": "tools-downloader.ipynb",
         "SaveToDirectory": "tools-downloader.ipynb",
         "ImageSizeCalculator": "tools-image_size_calculator.ipynb"}

modules = ["annotation/core.py",
           "annotation/folder_category_adapter.py",
           "annotation/multi_category_adapter.py",
           "annotation/via_adapter.py",
           "annotation/yolo_adapter.py",
           "annotation_converter.py",
           "annotation_viewer.py",
           "category_tools.py",
           "core.py",
           "dataset/core.py",
           "dataset/image_classification.py",
           "dataset/image_object_detection.py",
           "dataset/image_segmentation.py",
           "dataset/type.py",
           "dataset_generator.py",
           "evaluation/core.py",
           "geometry.py",
           "image/color_palette.py",
           "image/inference.py",
           "image/opencv_tools.py",
           "image/pillow_tools.py",
           "image/tools.py",
           "io/core.py",
           "tensorflow/tflite_converter.py",
           "tensorflow/tflite_metadata.py",
           "tensorflow/tfrecord_builder.py",
           "tools/check_double_images.py",
           "tools/downloader.py",
           "tools/image_size_calculator.py"]

doc_url = "https://AI-Force.github.io/aiforce/"

git_url = "https://github.com/AI-Force/aiforce/tree/master/"


def custom_doc_links(name): return None
