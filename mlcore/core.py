# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/core.ipynb (unless otherwise specified).

__all__ = ['DEFAULT_HELP_ARGUMENTS', 'import_modules', 'parse_known_help']

# Cell

from importlib import import_module, resources

# Cell

DEFAULT_HELP_ARGUMENTS = ['-h', '--help']

# Cell


def import_modules(package):
    """
    Dynamically import all modules but not submodules in a package.
    `package`: the package to import all modules
    """
    files = resources.contents(package)
    modules = [f[:-3] for f in files if f.endswith(".py") and f[0] != "_"]
    for module in modules:
        import_module(f"{package.__name__}.{module}")

# Cell


def parse_known_help(argv):
    """
    Parse the command line arguments for help parameter and decide,
    if the help parameter should be assigned to current argument parser.
    `argv`: the command line arguments to parse
    `root_parser`: True if the arguments are assigned to the root parser, else False
    return: a tuple containing [known, rest], where argv are the arguments assigned to current parser
    """
    non_help_argv = list(filter(lambda a: a not in DEFAULT_HELP_ARGUMENTS, argv))
    help_argv = list(filter(lambda a: a in DEFAULT_HELP_ARGUMENTS, argv))
    only_help = len(non_help_argv) == 1

    known = non_help_argv + help_argv if only_help else non_help_argv
    rest = [] if only_help else help_argv
    return known, rest
