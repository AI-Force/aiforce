# AUTOGENERATED! DO NOT EDIT! File to edit: core.ipynb (unless otherwise specified).

__all__ = ['Type', 'infer_type']

# Cell

from enum import Enum
from os.path import dirname, basename

# Cell


class Type(Enum):
    """
    Currently supported Machine Learning Types.
    """
    IMAGE_CLASSIFICATION = 'image_classification'
    IMAGE_SEGMENTATION = 'image_segmentation'
    IMAGE_GENERATION = 'image_generation'
    IMAGE_OBJECT_DETECTION = 'image_object_detection'

    def __str__(self):
        return self.value


# Cell


def infer_type(category_file_path):
    """
    Try to infer the type from the category file path.
    `category_file_path`: the path of the categories file
    return: the infered type
    raises: `ValueError` if unsupported type infered
    """
    try:
        path = dirname(category_file_path)
        data_set_type_from_path = basename(dirname(path))
        return Type(data_set_type_from_path)
    except ValueError:
        raise ValueError("Error, unsupported data-set type: {}".format(data_set_type_from_path))
