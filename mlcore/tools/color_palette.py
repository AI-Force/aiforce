# AUTOGENERATED! DO NOT EDIT! File to edit: tools-color_palette.ipynb (unless otherwise specified).

__all__ = ['pascal_voc_palette']

# Cell

import numpy as np

# Cell


def pascal_voc_palette(colors=256, normalized=False):
    """
    Generates the PASCAL VOC color palette.
    Original source taken from https://gist.github.com/wllhf/a4533e0adebe57e3ed06d4b50c8419ae
    `colors`: the number of colors to generate
    `normalized`: whether or not the color should be normalized
    return: the generated color palette
    """
    def bitget(byteval, idx):
        return ((byteval & (1 << idx)) != 0)

    dtype = 'float32' if normalized else 'uint8'
    cmap = np.zeros((colors, 3), dtype=dtype)
    for i in range(colors):
        r = g = b = 0
        c = i
        for j in range(8):
            r = r | (bitget(c, 0) << 7-j)
            g = g | (bitget(c, 1) << 7-j)
            b = b | (bitget(c, 2) << 7-j)
            c = c >> 3

        cmap[i] = np.array([r, g, b])

    cmap = cmap/255 if normalized else cmap
    return cmap